/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BackEnd.DataBase;
import BackEnd.Song;
import BackEnd.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EYMEN
 */
public class Songs extends javax.swing.JFrame {

    /**
     * Creates new form Songs
     */
    DataBase db = new DataBase();
    DefaultTableModel model = new DefaultTableModel();
    String email;

    public Songs() {

    }

    Songs(User user) {
        initComponents();
        model = (DefaultTableModel) songtable.getModel();
        sarkiListele();
        this.userlabel.setText(user.getEmail());
        this.setLocationRelativeTo(null);
        email = user.getEmail();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        songtable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        userlabel = new javax.swing.JLabel();
        songuyari = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("add song");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Kullanıcı çalma listesine ekleyecek aynı zamada my songs kısmında da görünecek");

        songtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "ad", "tarih", "alb_id", "tür", "süre", "dinlenme"
            }
        ));
        songtable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        songtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songtableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(songtable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FrontEnd/backicon.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        userlabel.setText("user");

        songuyari.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(256, 256, 256)
                                .addComponent(userlabel)))
                        .addGap(0, 187, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(songuyari, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userlabel))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(songuyari, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //maile göre şarkıyı ekleme
        String email = this.userlabel.getText();
        int selectedrow = this.songtable.getSelectedRow();
        if (selectedrow == -1) {
            this.songuyari.setText("şarkı seçiniz.");
        } else {
            int id = (int) songtable.getValueAt(selectedrow, 0);
            String ad = (String) songtable.getValueAt(selectedrow, 1);
            String tarih = (String) songtable.getValueAt(selectedrow, 2);
            String alb_id = (String) songtable.getValueAt(selectedrow, 3);
            String tur = (String) songtable.getValueAt(selectedrow, 4);
            String sure = (String) songtable.getValueAt(selectedrow, 5);
            String dinlenme = (String) songtable.getValueAt(selectedrow, 6);
            if (ayniSarkiMi(email, ad)) {
                this.songuyari.setText("şarkı listenizde var.");
            } else {

                db.sarkiyiKullaniciyaEkle(id, ad, tarih, alb_id, tur, sure, dinlenme, email);
                this.songuyari.setText("şarkı eklendi.");
                //usersongs foreign keylerle kuruldu.......
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void songtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songtableMouseClicked
        // TODO add your handling code here:
//        int selectedrow = songtable.getSelectedRow();
//        int id = (int) songtable.getValueAt(selectedrow, 0);
//        String ad = (String) this.songtable.getValueAt(selectedrow, 1);
//        String dinlenme =   String.valueOf(songtable.getValueAt(selectedrow, 6));//BURASI ÇOK ÖNEMLİ
//        int index =  Integer.parseInt(dinlenme);
//        index++;
//        songtable.setValueAt(index, selectedrow, 6);
//        db.dinlenmeSayisi(id, index);
//        JOptionPane.showMessageDialog(this, "dinleniyor...");

        //sonsuz tıklama hakkı;

    }//GEN-LAST:event_songtableMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        if (premiumMu()) {
            PremiumUser ps = new PremiumUser(new User(email));//constructordaki usera oradaki emaile attım//ÇOK ÖNEMLİ BİR DETAY BENCE
            ps.setVisible(true);
        } else {
            NormalUser nk = new NormalUser(new User(email));
            nk.setVisible(true);
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Songs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Songs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Songs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Songs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Songs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable songtable;
    private javax.swing.JLabel songuyari;
    public javax.swing.JLabel userlabel;
    // End of variables declaration//GEN-END:variables

    private void sarkiListele() {
        model.setRowCount(0);
        ArrayList<Song> songs = new ArrayList<Song>();
        songs = db.sarkiGetir();
        if (songs != null) {
            for (Song song : songs) {
                Object ekle[] = {
                    song.getId(),
                    song.getAd(),
                    song.getTarih(),
                    song.getAlb_id(),
                    song.getTür(),
                    song.getSüre(),
                    song.getDinlenme()

                };
                model.addRow(ekle);
            }

        }
    }

    private boolean ayniSarkiMi(String email, String ad) {
        if (db.ayniSarki(email, ad)) {
            return true;
        } else {
            return false;
        }
    }

    private boolean premiumMu() {
        if (db.premiumAl(email)) {
            return true;
        } else {
            return false;
        }
    }

}
